{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rodolfo/Documents/Estudo/Ignite/NextJS/Aulas/ignews/Ignite-Ig.News/src/pages/posts/[slug].tsx\";\nimport { getSession } from \"next-auth/client\";\nimport { RichText } from \"prismic-dom\";\nimport { getPrismicClient } from \"../../services/prismic\";\nexport default function Post() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"pos\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async ({\n  req,\n  params\n}) => {\n  const session = await getSession({\n    req\n  });\n  const {\n    slug\n  } = params; // if (session) {\n  // }\n\n  const prismic = getPrismicClient(req);\n  const response = await prismic.getByUID('post', String(slug), {});\n  const post = {\n    slug,\n    title: RichText.asText(response.data.title),\n    content: RichText.asHtml(response.data.content),\n    updatedAt: new Date(response.last_publication_date).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: 'long',\n      year: 'numeric'\n    })\n  };\n  return {\n    props: {\n      post\n    }\n  };\n};","map":{"version":3,"sources":["/home/rodolfo/Documents/Estudo/Ignite/NextJS/Aulas/ignews/Ignite-Ig.News/src/pages/posts/[slug].tsx"],"names":["getSession","RichText","getPrismicClient","Post","getServerSideProps","req","params","session","slug","prismic","response","getByUID","String","post","title","asText","data","content","asHtml","updatedAt","Date","last_publication_date","toLocaleDateString","day","month","year","props"],"mappings":";;AACA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAED,OAAO,MAAMC,kBAAsC,GAAG,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA2B;AAC/E,QAAMC,OAAO,GAAG,MAAMP,UAAU,CAAC;AAAEK,IAAAA;AAAF,GAAD,CAAhC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWF,MAAjB,CAF+E,CAI/E;AAEA;;AAEA,QAAMG,OAAO,GAAGP,gBAAgB,CAACG,GAAD,CAAhC;AAEA,QAAMK,QAAQ,GAAG,MAAMD,OAAO,CAACE,QAAR,CAAiB,MAAjB,EAAyBC,MAAM,CAACJ,IAAD,CAA/B,EAAuC,EAAvC,CAAvB;AAEA,QAAMK,IAAI,GAAG;AACXL,IAAAA,IADW;AAEXM,IAAAA,KAAK,EAAEb,QAAQ,CAACc,MAAT,CAAgBL,QAAQ,CAACM,IAAT,CAAcF,KAA9B,CAFI;AAGXG,IAAAA,OAAO,EAAEhB,QAAQ,CAACiB,MAAT,CAAgBR,QAAQ,CAACM,IAAT,CAAcC,OAA9B,CAHE;AAIXE,IAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASV,QAAQ,CAACW,qBAAlB,EAAyCC,kBAAzC,CAA4D,OAA5D,EAAqE;AAC9EC,MAAAA,GAAG,EAAE,SADyE;AAE9EC,MAAAA,KAAK,EAAE,MAFuE;AAG9EC,MAAAA,IAAI,EAAE;AAHwE,KAArE;AAJA,GAAb;AAWA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLb,MAAAA;AADK;AADF,GAAP;AAKD,CA5BM","sourcesContent":["import { GetServerSideProps } from \"next\"\nimport { getSession } from \"next-auth/client\"\nimport { RichText } from \"prismic-dom\"\nimport { getPrismicClient } from \"../../services/prismic\"\n\nexport default function Post() {\n  return (\n    <h1>pos</h1>\n  )\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ req, params }) => {\n  const session = await getSession({ req })\n  const { slug } = params\n\n  // if (session) {\n\n  // }\n\n  const prismic = getPrismicClient(req)\n\n  const response = await prismic.getByUID('post', String(slug), {})\n\n  const post = {\n    slug,\n    title: RichText.asText(response.data.title),\n    content: RichText.asHtml(response.data.content),\n    updatedAt: new Date(response.last_publication_date).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: 'long',\n      year: 'numeric'\n    })\n  }\n\n  return {\n    props: {\n      post,\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}