{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rodolfo/Documents/Estudo/Ignite/NextJS/Aulas/Ignite-Ig.News-With-Testes/src/pages/posts/index.tsx\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Prismic from '@prismicio/client';\nimport { RichText } from 'prismic-dom';\nimport { getPrismicClient } from '../../services/prismic';\nimport styles from './styles.module.scss';\nexport default function Posts({\n  posts\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Posts | Ig.News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.posts,\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n          href: `/posts/${post.slug}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(\"time\", {\n              children: post.updatedAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.excerpt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, post.slug, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const response = await prismic.query([Prismic.predicates.at('document. type', 'post')], {\n    fetch: ['post.title', 'post.content'],\n    pageSize: 3\n  });\n  const posts = response.results.map(post => {\n    var _post$data$content$fi, _post$data$content$fi2;\n\n    return {\n      slug: post.uid,\n      title: RichText.asText(post.data.title),\n      excerpt: (_post$data$content$fi = (_post$data$content$fi2 = post.data.content.find(content => content.type === 'paragraph')) === null || _post$data$content$fi2 === void 0 ? void 0 : _post$data$content$fi2.text) !== null && _post$data$content$fi !== void 0 ? _post$data$content$fi : '',\n      updateAt: new Date(post.last_publication_date).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      })\n    };\n  });\n  return {\n    props: {\n      posts\n    }\n  };\n};","map":{"version":3,"sources":["/home/rodolfo/Documents/Estudo/Ignite/NextJS/Aulas/Ignite-Ig.News-With-Testes/src/pages/posts/index.tsx"],"names":["Head","Link","Prismic","RichText","getPrismicClient","styles","Posts","posts","container","map","post","slug","updatedAt","title","excerpt","getStaticProps","prismic","response","query","predicates","at","fetch","pageSize","results","uid","asText","data","content","find","type","text","updateAt","Date","last_publication_date","toLocaleDateString","day","month","year","props"],"mappings":";;;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAaA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAsC;AACnD,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAM,MAAA,SAAS,EAAEF,MAAM,CAACG,SAAxB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEH,MAAM,CAACE,KAAvB;AAAA,kBAEIA,KAAK,CAACE,GAAN,CAAUC,IAAI,iBAEd,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,UAASA,IAAI,CAACC,IAAK,EAAhC;AAAA,iCACE;AAAA,oCACE;AAAA,wBAAOD,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAASF,IAAI,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA,aAAQJ,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAyBD;AAED,OAAO,MAAMI,cAA8B,GAAG,YAAY;AACxD,QAAMC,OAAO,GAAGZ,gBAAgB,EAAhC;AAEA,QAAMa,QAAQ,GAAG,MAAMD,OAAO,CAACE,KAAR,CAAc,CACnChB,OAAO,CAACiB,UAAR,CAAmBC,EAAnB,CAAsB,gBAAtB,EAAwC,MAAxC,CADmC,CAAd,EAEpB;AACDC,IAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,cAAf,CADN;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAFoB,CAAvB;AAOA,QAAMf,KAAK,GAAGU,QAAQ,CAACM,OAAT,CAAiBd,GAAjB,CAAqBC,IAAI,IAAI;AAAA;;AACzC,WAAO;AACLC,MAAAA,IAAI,EAAED,IAAI,CAACc,GADN;AAELX,MAAAA,KAAK,EAAEV,QAAQ,CAACsB,MAAT,CAAgBf,IAAI,CAACgB,IAAL,CAAUb,KAA1B,CAFF;AAGLC,MAAAA,OAAO,qDAAEJ,IAAI,CAACgB,IAAL,CAAUC,OAAV,CAAkBC,IAAlB,CAAuBD,OAAO,IAAIA,OAAO,CAACE,IAAR,KAAiB,WAAnD,CAAF,2DAAE,uBAAiEC,IAAnE,yEAA2E,EAH7E;AAILC,MAAAA,QAAQ,EAAE,IAAIC,IAAJ,CAAStB,IAAI,CAACuB,qBAAd,EAAqCC,kBAArC,CAAwD,OAAxD,EAAiE;AACzEC,QAAAA,GAAG,EAAE,SADoE;AAEzEC,QAAAA,KAAK,EAAE,MAFkE;AAGzEC,QAAAA,IAAI,EAAE;AAHmE,OAAjE;AAJL,KAAP;AAUD,GAXa,CAAd;AAaA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL/B,MAAAA;AADK;AADF,GAAP;AAKD,CA5BM","sourcesContent":["import { GetStaticProps } from 'next'\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport Prismic from '@prismicio/client'\nimport { RichText } from 'prismic-dom'\n\nimport { getPrismicClient } from '../../services/prismic'\n\nimport styles from './styles.module.scss'\n\ntype Post = {\n  slug: string\n  title: string\n  excerpt: string\n  updatedAt: string\n}\n\ninterface PostsProps {\n  posts: Post[]\n}\n\nexport default function Posts({ posts }: PostsProps) {\n  return (\n    <>\n      <Head>\n        <title>Posts | Ig.News</title>\n      </Head>\n\n      <main className={styles.container}>\n        <div className={styles.posts}>\n\n          { posts.map(post => (\n\n            <Link href={`/posts/${post.slug}`}>\n              <a key={post.slug}>\n                <time>{post.updatedAt}</time>\n                <strong>{post.title}</strong>\n                <p>{post.excerpt}</p>\n              </a>\n            </Link>\n\n          )) }\n\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const prismic = getPrismicClient()\n\n  const response = await prismic.query([\n    Prismic.predicates.at('document. type', 'post')\n  ], {\n    fetch: ['post.title', 'post.content'],\n    pageSize: 3,\n  })\n\n  const posts = response.results.map(post => {\n    return {\n      slug: post.uid,\n      title: RichText.asText(post.data.title),\n      excerpt: post.data.content.find(content => content.type === 'paragraph')?.text ?? '',\n      updateAt: new Date(post.last_publication_date).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      })\n    }\n  })\n\n  return {\n    props: {\n      posts\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}